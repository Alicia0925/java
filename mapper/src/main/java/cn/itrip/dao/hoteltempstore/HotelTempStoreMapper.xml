<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itrip.dao.hoteltempstore.HotelTempStoreMapper">
  <resultMap id="BaseResultMap" type="cn.itrip.beans.pojo.HotelTempStore">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="hotelId" jdbcType="INTEGER" property="hotelId" />
    <result column="roomId" jdbcType="BIGINT" property="roomId" />
    <result column="recordDate" jdbcType="TIMESTAMP" property="recordDate" />
    <result column="store" jdbcType="INTEGER" property="store" />
    <result column="creationDate" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="createdBy" jdbcType="BIGINT" property="createdBy" />
    <result column="modifyDate" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="modifiedBy" jdbcType="BIGINT" property="modifiedBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, hotelId, roomId, recordDate, store, creationDate, createdBy, modifyDate, modifiedBy
  </sql>

<!--库存刷新:调用存储过程-->
  <update id="flushStore" statementType="CALLABLE" parameterType="map">
    {call pre_flush_store(
    #{startTime},
    #{endTime},
    #{roomId},
    #{hotelId})
    }

  </update>

  <!--根据roomId和记录时间查询库存记录数-->

  <select id="getCountByRoomIdAndRecordTime" resultType="int">
    SELECT

		COUNT(id)

	FROM

		itrip_hotel_temp_store

	WHERE

		roomId = #{roomId}

	AND DATE_FORMAT(recordDate, '%Y-%m-%d') = DATE_FORMAT(#{tempTime}, '%Y-%m-%d');
  </select>

<!--插入一条临时库存-->

  <insert id="addTempStore" useGeneratedKeys="true" keyProperty="id" parameterType="map">
    INSERT INTO itrip_hotel_temp_store (

	hotelId,

	roomId,

	recordDate,

	store,

	creationDate

)

VALUES

	(

		#{hotelId1},

		#{roomId1},

		#{tempTime},

		#{store1},

		NOW()

	);


  </insert>
  <!--当日库存=实时库存表的库存数量-当日订单中对应该房型未支付的订单所占的库存-->

  <select id="queryRoomStore" resultType="cn.itrip.beans.vo.store.StoreVO"  parameterType="java.util.Map">
              SELECT A.roomId,A.recordDate,A.store from (
              SELECT
                    store.roomId,
                    store.recordDate,
                    DATE_FORMAT(store.recordDate,'%Y-%m-%d'),
	                store.store - (
                            CASE
                            WHEN SUM(ord.count) IS NULL THEN
                                0
                            ELSE
                                SUM(ord.count)
                            END
	                ) AS store
                    FROM
                        itrip_hotel_temp_store store
                    LEFT JOIN itrip_hotel_order ord ON store.roomId = ord.roomId AND ord.orderStatus = 0
                    AND DATE_FORMAT(store.recordDate,'%Y-%m-%d') BETWEEN DATE_FORMAT(ord.checkInDate, '%Y-%m-%d') AND DATE_FORMAT(ord.checkOutDate,'%Y-%m-%d')
                    WHERE   store.roomId = #{roomId}
                    GROUP BY  store.roomId,store.recordDate) AS A
                    WHERE  A.recordDate BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d') AND DATE_FORMAT(#{endTime}, '%Y-%m-%d') ORDER by A.store ASC
    </select>

<!--如果库存满足则锁定库存-->
  <update id="updateRoomStore" parameterType="java.util.Map">
     update itrip_hotel_temp_store set  store=store-#{count}
        WHERE
            roomId=#{roomId}
        AND
            DATE_FORMAT(recordDate, '%Y-%m-%d ')
        BETWEEN
            DATE_FORMAT(#{startTime}, '%Y-%m-%d')
        AND
            DATE_FORMAT(#{endTime}, '%Y-%m-%d')
    </update>


  <!--以下是自动生成CURD-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from itrip_hotel_temp_store
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from itrip_hotel_temp_store
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.itrip.beans.pojo.HotelTempStore">
    insert into itrip_hotel_temp_store (id, hotelId, roomId, 
      recordDate, store, creationDate, 
      createdBy, modifyDate, modifiedBy
      )
    values (#{id,jdbcType=BIGINT}, #{hotelId,jdbcType=INTEGER}, #{roomId,jdbcType=BIGINT}, 
      #{recordDate,jdbcType=TIMESTAMP}, #{store,jdbcType=INTEGER}, #{creationDate,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=BIGINT}, #{modifyDate,jdbcType=TIMESTAMP}, #{modifiedBy,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.itrip.beans.pojo.HotelTempStore" useGeneratedKeys="true" keyProperty="id">
    insert into itrip_hotel_temp_store
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="hotelId != null">
        hotelId,
      </if>
      <if test="roomId != null">
        roomId,
      </if>
      <if test="recordDate != null">
        recordDate,
      </if>
      <if test="store != null">
        store,
      </if>
      <if test="creationDate != null">
        creationDate,
      </if>
      <if test="createdBy != null">
        createdBy,
      </if>
      <if test="modifyDate != null">
        modifyDate,
      </if>
      <if test="modifiedBy != null">
        modifiedBy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="hotelId != null">
        #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=BIGINT},
      </if>
      <if test="recordDate != null">
        #{recordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="store != null">
        #{store,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itrip.beans.pojo.HotelTempStore">
    update itrip_hotel_temp_store
    <set>
      <if test="hotelId != null">
        hotelId = #{hotelId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        roomId = #{roomId,jdbcType=BIGINT},
      </if>
      <if test="recordDate != null">
        recordDate = #{recordDate,jdbcType=TIMESTAMP},
      </if>
      <if test="store != null">
        store = #{store,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null">
        creationDate = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        createdBy = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="modifyDate != null">
        modifyDate = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        modifiedBy = #{modifiedBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itrip.beans.pojo.HotelTempStore">
    update itrip_hotel_temp_store
    set hotelId = #{hotelId,jdbcType=INTEGER},
      roomId = #{roomId,jdbcType=BIGINT},
      recordDate = #{recordDate,jdbcType=TIMESTAMP},
      store = #{store,jdbcType=INTEGER},
      creationDate = #{creationDate,jdbcType=TIMESTAMP},
      createdBy = #{createdBy,jdbcType=BIGINT},
      modifyDate = #{modifyDate,jdbcType=TIMESTAMP},
      modifiedBy = #{modifiedBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>



</mapper>